// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`autoescape.melody.twig 1`] = `
{% autoescape 'html' %}

<button type="button">Click me</button>

<span>Yes</span>

{% endautoescape %}

{%- autoescape 'html' -%}
<button type="button">Click me</button>
{%- endautoescape -%}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{% autoescape 'html' %}
    <button type="button">Click me</button>

    <span>Yes</span>
{% endautoescape %}

{%- autoescape 'html' -%}
    <button type="button">Click me</button>
{%- endautoescape -%}

`;

exports[`do.melody.twig 1`] = `
{% do 1 + 2 %}

{%- do 1 + 2 -%}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{% do 1 + 2 %}

{%- do 1 + 2 -%}

`;

exports[`filter.melody.twig 1`] = `
{% filter upper %}
    This text becomes uppercase
{% endfilter %}

{% filter upper -%}
    This text becomes uppercase
{%- endfilter %}

{%- filter lower|escape('html') | upper | escape('markdown') | lower | upper | escape('markdown') %}
    <strong>SOME TEXT</strong>

    <p>The cat is taking a nap in the sunshine.</p>

    
{% endfilter -%}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{% filter upper %}
    This text becomes uppercase
{% endfilter %}

{% filter upper -%}
    This text becomes uppercase
{%- endfilter %}

{%- filter lower
    |escape('html')
    |upper
    |escape('markdown')
    |lower
    |upper
    |escape('markdown')
%}
    <strong>SOME TEXT</strong>

    <p>
        The cat is taking a nap in the sunshine.
    </p>
{% endfilter -%}

`;

exports[`flush.melody.twig 1`] = `
{%- flush %}
{% flush -%}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{%- flush %}
{% flush -%}

`;

exports[`macro.melody.twig 1`] = `
{% macro input(name, value, type, size, shape, colour, taste, flash, broom, lawn, cloud, sky, hedgehog) %}
    <input type="{{ type }}" name="{{ name }}" value="{{ value|e }}" size="{{ size }}" />
{% endmacro %}

{%- macro wrapped_input(name, value, type, size) %}
    {% import _self as forms %}

    <div class="field">
        {{ forms.input(name, value, type, size) }}
    </div>
{% endmacro -%}

{% macro whitespaceRemoval(name, value, type, size) -%}

    <div class="field">
        {{ forms.input(name, value, type, size) }}
    </div>


{%- endmacro %}

{% macro partner(groupId, value) %}
    {# 80 is the groupid of specific hotel websites that may not have a correct partner name #}
    {{ groupId == 80 ? 'book_hotel_website_test' | translate : value }}
{% endmacro %}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{% macro input(
    name,
    value,
    type,
    size,
    shape,
    colour,
    taste,
    flash,
    broom,
    lawn,
    cloud,
    sky,
    hedgehog)
%}
    <input type="{{ type }}"
        name="{{ name }}"
        value="{{ value|e }}"
        size="{{ size }}" />
{% endmacro %}

{%- macro wrapped_input(name, value, type, size) %}
    {% import _self as forms %}

    <div class="field">
        {{ forms.input(name, value, type, size) }}
    </div>
{% endmacro -%}

{% macro whitespaceRemoval(name, value, type, size) -%}
    <div class="field">
        {{ forms.input(name, value, type, size) }}
    </div>
{%- endmacro %}

{% macro partner(groupId, value) %}
    {# 80 is the groupid of specific hotel websites that may not have a correct partner name #}
    {{ groupId == 80 ? 'book_hotel_website_test'|translate : value }}
{% endmacro %}

`;

exports[`macro-comprehensive.melody.twig 1`] = `
{# Test macros with various default value types #}
{% macro comprehensive(stringParam = "default string", numberParam = 42, nulValue = null, boolParam = true) %}
    <div>{{ stringParam }} - {{ numberParam }} - {{ nulValue }} - {{ boolParam }}</div>
{% endmacro %}

{# Test mixed parameters #}
{% macro mixed(required1, required2, optional1 = "default", optional2 = 100) %}
    {{ required1 }}, {{ required2 }}, {{ optional1 }}, {{ optional2 }}
{% endmacro %}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{# Test macros with various default value types #}
{% macro comprehensive(
    stringParam = 'default string',
    numberParam = 42,
    nulValue = null,
    boolParam = true)
%}
    <div>
        {{ stringParam }} - {{ numberParam }} - {{ nulValue }} - {{ boolParam }}
    </div>
{% endmacro %}

{# Test mixed parameters #}
{% macro mixed(required1, required2, optional1 = 'default', optional2 = 100) %}
    {{ required1 }}, {{ required2 }}, {{ optional1 }}, {{ optional2 }}
{% endmacro %}

`;

exports[`macro-simple-test.melody.twig 1`] = `
{% macro test(myParam = null, numParam = 42) %}
    {{ myParam }} - {{ numParam }}
{% endmacro %}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{% macro test(myParam = null, numParam = 42) %}
    {{ myParam }} - {{ numParam }}
{% endmacro %}

`;

exports[`macro-with-defaults.melody.twig 1`] = `
{%- macro get(name, cookieJar = null) -%}
    {% apply spaceless %}
        {% set cookieJar = cookieJar ?? craft.app.request.cookies %}
        {% set cookie = cookieJar.get(name) %}
        {{ cookie ? cookie.value : '' }}
    {% endapply %}
{%- endmacro -%}

{% macro input(name, value, type = "text", size = 20) %}
    <input type="{{ type }}" name="{{ name }}" value="{{ value|e }}" size="{{ size }}" />
{% endmacro %}

{% macro textarea(name, value, rows = 10, cols = 40) %}
    <textarea name="{{ name }}" rows="{{ rows }}" cols="{{ cols }}">{{ value|e }}</textarea>
{% endmacro %}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{%- macro get(name, cookieJar = null) -%}
    {% apply spaceless %}
    {% set cookieJar = cookieJar ?? craft.app.request.cookies %}
    {% set cookie = cookieJar.get(name) %}
    {{ cookie ? cookie.value : '' }}
    {% endapply %}
{%- endmacro -%}

{% macro input(name, value, type = 'text', size = 20) %}
    <input type="{{ type }}"
        name="{{ name }}"
        value="{{ value|e }}"
        size="{{ size }}" />
{% endmacro %}

{% macro textarea(name, value, rows = 10, cols = 40) %}
    <textarea name="{{ name }}" rows="{{ rows }}" cols="{{ cols }}">
        {{ value|e }}
    </textarea>
{% endmacro %}

`;

exports[`set.melody.twig 1`] = `
{% set list = [1, 2] %}
{%- set foo = 0 -%}
{% set foo = 'foo' ~ 'bar' %}
{% set foo = {'fruit': 'apple', 'shape': 'round', 'taste': 'sweet', 'region': 'Europe' } %}
{% set foo = {'fruit': 'apple', 'shape': 'round', 'taste': 'sweet', 'region': 'Europe', 'colour': 'reddish' } %}
{% set foo, bar = 'foo', 'bar' %}
{%- set foo -%}

    <div id="pagination">

        Some text
    </div>


    <p>Some more text</p>
{%- endset -%}

{% set showArrows = hideArrowWhenDisabled | default(false)
    ? shouldShowArrows | default(false) and scrollEnabled | default(false)
    : shouldShowArrows | default(false)
%}

{% set recommendedClickoutAttributes = hasRecommendedPrice ? clickoutAttributes | merge({
    'data-id': recommendedPrice.dealId,
    'data-co_params': recommendedPrice.clcklB | json_encode(),
    'data-co_li_lo': 1
}) : {} %}

{% set showAAScoreRating = isAAScoreActive and isAAAccommodation and aaScoreRatingData and aaScoreRatingData.score > 0 %}

{% set displayLegalPaymentInfo = not (isFrance and isAtLeastScreenTabletWide) %}

{% set displayLegalPaymentInfo = not (isAAScoreActive and isAAAccommodation and aaScoreRatingData and aaScoreRatingDataABC > 0 and aaScoreRatingDataABC < 5) %}

{% set flavours = ['banana', 'strawberry', 'pineapple', 'lemon', 'raspberry', 'vanilla'] %}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{% set list = [1, 2] %}
{%- set foo = 0 -%}
{% set foo = 'foo' ~ 'bar' %}
{% set foo = {
    fruit: 'apple',
    shape: 'round',
    taste: 'sweet',
    region: 'Europe'
} %}
{% set foo = {
    fruit: 'apple',
    shape: 'round',
    taste: 'sweet',
    region: 'Europe',
    colour: 'reddish'
} %}
{% set foo = 'foo' %}
{% set bar = 'bar' %}
{%- set foo -%}
    <div id="pagination">
        Some text
    </div>

    <p>
        Some more text
    </p>
{%- endset -%}

{% set showArrows = hideArrowWhenDisabled|default(false)
    ? (shouldShowArrows|default(false)) and (scrollEnabled|default(false))
    : shouldShowArrows|default(false)
%}

{% set recommendedClickoutAttributes = hasRecommendedPrice
    ? clickoutAttributes|merge({
        'data-id': recommendedPrice.dealId,
        'data-co_params': recommendedPrice.clcklB|json_encode,
        'data-co_li_lo': 1
    })
    : {}
%}

{% set showAAScoreRating = isAAScoreActive
    and isAAAccommodation
    and aaScoreRatingData
    and aaScoreRatingData.score > 0
%}

{% set displayLegalPaymentInfo = not (isFrance and isAtLeastScreenTabletWide) %}

{% set displayLegalPaymentInfo = not (
    isAAScoreActive
        and isAAAccommodation
        and aaScoreRatingData
        and aaScoreRatingDataABC > 0
        and aaScoreRatingDataABC < 5
) %}

{% set flavours = [
    'banana',
    'strawberry',
    'pineapple',
    'lemon',
    'raspberry',
    'vanilla'
] %}

`;

exports[`spaceless.melody.twig 1`] = `
{% spaceless %}
<div class="qtp-item__text">
    Receive {{ formattedIncentive }} cash back for testing this hotel.
    Or just <span> be </span> happy!
</div>
{% endspaceless %}

{%- spaceless -%}
The quick brown fox
{%- endspaceless -%}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{% spaceless %}
    <div class="qtp-item__text">
        Receive {{ formattedIncentive }} cash back for testing this hotel. Or just
        <span>be</span> happy!
    </div>
{% endspaceless %}

{%- spaceless -%}
    The quick brown fox
{%- endspaceless -%}

`;
